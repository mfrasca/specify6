<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping>

<class 
    name="edu.ku.brc.specify.datamodel.Container" 
    table="container"
	lazy="true"
>
    <meta attribute="class-description" inherit="false">
       @hibernate.class
        table="container"
    </meta>
    
    <meta attribute="extra-import">org.hibernate.Criteria</meta>
    <meta attribute="extra-import">org.hibernate.criterion.Expression</meta>
    <meta attribute="extra-import">edu.ku.brc.specify.dbsupport.HibernateUtil</meta>
    
    <meta attribute="class-code">
        <![CDATA[
    protected CollectionObject collectionObject = null;
    
    /**
     * 
     */
    public CollectionObject getCollectionObject() 
    {
        if (collectionObjectId != null)
        {
	        Criteria criteria = HibernateUtil.getCurrentSession().createCriteria(CollectionObject.class);
	        criteria.add(Expression.eq("collectionObjectId", collectionObjectId));
	        java.util.List list = criteria.list();
	        this.collectionObject = list != null && list.size() > 0 ? (CollectionObject)list.get(0) : null;
	        return this.collectionObject;
	    } 
	    return null;
    }
    
    public void setCollectionObject(CollectionObject collectionObject) 
    {
        this.collectionObject = collectionObject;
        this.collectionObjectId = collectionObject != null ? collectionObject.getCollectionObjectId() : null;
    }
    ]]>
    </meta>    

    <id
        name="containerId"
        type="java.lang.Integer"
        column="ContainerID"
    >
        <meta attribute="field-description">
           @hibernate.id
            generator-class="native"
            type="java.lang.Integer"
            column="ContainerID"

        </meta>
        <meta attribute="scope-field">protected</meta>
        <generator class="native" />
    </id>

    <property
        name="collectionObjectId"
        type="int"
        column="CollectionObjectID"
        not-null="false"
    >
        <meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.property
            type="int"
            column="CollectionObjectID"
            not-null="false"
        </meta>    
    </property>
    
    <property
        name="type"
        type="short"
        column="Type"
    >
        <meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="Type"
        </meta>    
    </property>
    
    <property
        name="name"
        type="java.lang.String"
        column="Name"
        length="64"
    >
        <meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="Name"
            length="64"
        </meta>    
    </property>
    
    <property
        name="description"
        type="java.lang.String"
        column="Description"
        length="255"
    >
        <meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="Name"
            length="255"
        </meta>    
    </property>
    
    <property
        name="number"
        type="int"
        column="Number"
    >
        <meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.property
            column="Number"
        </meta>    
    </property>
    
    <property
        name="timestampModified"
        type="java.sql.Timestamp"
        column="TimestampModified"
        length="23"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="TimestampModified"
            length="23"
            not-null="true"
        </meta>    
    </property>
    
    <property
        name="timestampCreated"
        type="java.sql.Timestamp"
        column="TimestampCreated"
        length="23"
        not-null="true"
        update="false"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="TimestampCreated"
            length="23"
            update="false"
            not-null="true"
        </meta>    
    </property>
    
    <property
        name="lastEditedBy"
        type="java.lang.String"
        column="LastEditedBy"
        length="50"
    >
        <meta attribute="field-description">
           @hibernate.property
            column="LastEditedBy"
            length="50"
        </meta>    
    </property>
    
    <!-- Associations -->

    <!-- bi-directional one-to-many association to ContainerItems -->
    <set
        name="items"
        lazy="true"
        inverse="true"
		cascade="none"
    >    
	<meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.set
            lazy="true"
            inverse="true"
            cascade="none"

           @hibernate.collection-key
            column="ContainerItemsID"

           @hibernate.collection-one-to-many
            class="edu.ku.brc.specify.datamodel.ContainerItem"
        </meta> 
        <key>
            <column name="ContainerID" />
        </key>
        <one-to-many 
            class="edu.ku.brc.specify.datamodel.ContainerItem"
        />
    </set>
	
    <!-- bi-directional one-to-one association to CollectionObject -->
    <!--<one-to-one 
        name="owner"
        class="edu.ku.brc.specify.datamodel.CollectionObject"
        constrained="true"
    >
	<meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.one-to-one
           @hibernate.column name="CollectionObjectID"         
        </meta>
    </one-to-one>
    -->
    
    <!-- bi-directional one-to-one association to Location -->
    <!--<one-to-one 
        name="location"
        class="edu.ku.brc.specify.datamodel.Location"
        cascade="save-update"
    >
	<meta attribute="scope-field">protected</meta>
        <meta attribute="field-description">
           @hibernate.one-to-one
           @hibernate.column name="LocationID"         
        </meta>
    </one-to-one> -->
    
</class>
</hibernate-mapping>
