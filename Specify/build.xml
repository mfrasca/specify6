<?xml version="1.0"?>
<project name="Specify 6.0 Build File" default="db" basedir=".">

  <!-- Set up properties containing important project directories -->
  <property name="source.root" value="src"/>
  <property name="class.root" value="bin"/>
  <property name="lib.dir" value="libs"/>
  <property name="hibernatelib.dir" value="hibernate_libs"/>
  <property name="externallib.dir" value="external_libs"/>
  <property name="hibernate.properties" value="hibernate.properties"/>
	
	
  <property name="data.dir" value="data"/>

  <!-- Set up the class path for compilation and execution -->
  <path id="project.class.path">
      <!-- Include our own classes, of course -->
      <pathelement location="${class.root}" />
      <!-- Include jars in the project library directory -->
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${hibernatelib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${externallib.dir}">
      <include name="**/*.jar"/>
    </fileset>    
  </path>
	
  <!--<include name="**/*.jar"/>-->
  <target name="db" description="Runs HSQLDB database management UI against the database file--use when application is not running">
      <java classname="org.hsqldb.util.DatabaseManager"
            fork="yes">
         <classpath refid="project.class.path"/>
         <arg value="-driver"/>
         <arg value="org.hsqldb.jdbcDriver"/>
         <arg value="-url"/>
         <arg value="jdbc:hsqldb:${data.dir}/collections"/>
         <arg value="-user"/>
         <arg value="sa"/>
      </java>
  </target>

  <!-- Teach Ant how to use Hibernate's code generation tool -->
  <!--<taskdef name="hbm2java"
           classname="net.sf.hibernate.tool.hbm2java.Hbm2JavaTask"
           classpathref="project.class.path"/>-->
		   
  <taskdef name="hbm2java"
           classname="org.hibernate.tool.ant.Hbm2JavaGeneratorTask"
           classpathref="project.class.path"/>		   
		   

  <!-- Generate the java code for all mapping files in our source tree -->
  <target name="codegen" depends="prepare"
          description="Generate Java source from the O/R mapping files">
    <!-- <hbm2java output="${source.root}">
      <fileset dir="${source.root}">
        <include name="**/*.hbm.xml"/>
      </fileset>
    </hbm2java> -->
  </target>



<!-- Formally introduce Ant to the toolset -->
   <taskdef name="hibernatetool"
           classname="org.hibernate.tool.ant.HibernateToolTask">
         <classpath refid="project.class.path" />
   </taskdef>
   
   <!-- bit of a best guess, I'm afraid -->
   <!-- <hibernatetool destdir="${source.root}">
       <configuration propertyFile="src/${hibernate.properties}">
         <fileset dir="${source.root}">
            <include name="**/*.hbm.xml" />
         </fileset>
      </configuration>
      <hbm2java />
      <hbm2ddl />
   </hibernatetool>
	-->

  <!-- Create our runtime subdirectories and copy resources into them -->
  <target name="prepare" description="Sets up build structures">
    <mkdir dir="${class.root}"/>

    <!-- Copy our property files and O/R mappings for use at runtime -->
    <copy todir="${class.root}" >
      <fileset dir="${source.root}" >
        <include name="**/*.properties"/>
        <include name="**/*.hbm.xml"/>
      </fileset>
    </copy>
  </target>

  <!-- Compile the java source of the project -->
  <target name="compile" depends="prepare"
          description="Compiles all Java classes">
    <javac srcdir="${source.root}"
           destdir="${class.root}"
           debug="on"
           optimize="off"
           deprecation="on">
      <classpath refid="project.class.path"/>
    </javac>
  </target>

  <!-- Generate the schemas for all mapping files in our class tree -->
  <target name="schema" depends="compile"
          description="Generate DB schema from the O/R mapping files">

    <!-- Teach Ant how to use Hibernate's schema generation tool -->
    <taskdef name="schemaexport"
             classname="net.sf.hibernate.tool.hbm2ddl.SchemaExportTask"
             classpathref="project.class.path"/>

    <schemaexport properties="${class.root}/${hibernate.properties}"
                  quiet="no" text="no" drop="no">
      <fileset dir="${class.root}">
        <include name="**/*.hbm.xml"/>
      </fileset>
    </schemaexport>
  </target>

	  <!-- Generate the schemas for all mapping files in our class tree -->
	  <target name="schemaupdate" depends="compile"
	          description="Generate DB schema from the O/R mapping files">

	    <!-- Teach Ant how to use Hibernate's schema generation tool -->
	    <taskdef name="schemaupdate"
	             classname="net.sf.hibernate.tool.hbm2ddl.SchemaUpdateTask"
	             classpathref="project.class.path"/>

	    <schemaupdate properties="${class.root}/${hibernate.properties}"
	                  quiet="no" text="no">
	      <fileset dir="${class.root}">
	        <include name="**/*.hbm.xml"/>
	      </fileset>
	    </schemaupdate>
	  </target>	
	
  <target name="ctest" description="Creates and persists some sample data"
          depends="compile">
    <java classname="edu.ku.brc.hyla.HylaCreateTest" fork="true">
      <classpath refid="project.class.path"/>
    </java>
  </target>

  <target name="run" description="Runs prototype" depends="compile">
    <java classname="edu.ku.brc.hyla.HylaApp" fork="true">
      <classpath refid="project.class.path"/>
    	 <jvmarg value= "-Xmx900m"/> 
    </java>
  </target>

  <target name="qtest" description="Run a simple Hibernate query"
          depends="compile">
    <java classname="edu.ku.brc.hyla.HylaQueryTest" fork="true">
      <classpath refid="project.class.path"/>
    </java>
  </target>
  
    <target name="buildrun" description="Compiles, maps, builds and runs"
          depends="compile,codegen,schema,ctest">
    <java classname="edu.ku.brc.hyla.HylaApp" fork="true">
      <classpath refid="project.class.path"/>
    </java>
  </target>

  <target name="runspring" description="Runs prototype" depends="compile">
    <java classname="edu.ku.brc.hyla.HylaAppLoader" fork="true">
      <classpath refid="project.class.path"/>
    	 <jvmarg value= "-Xmx900m"/> 
    </java>
  </target>
  <target name="runwb" description="Runs prototype" depends="compile">
    <java classname="edu.ku.brc.hyla.WorkBench" fork="true">
      <classpath refid="project.class.path"/>
    	 <jvmarg value= "-Xmx900m"/> 
    </java>
  </target>  
  
  
   
   <target name="gencode">
      <!-- bit of a best guess, I'm afraid -->
      <hibernatetool destdir="${source.root}">
         <configuration propertyFile="src/${hibernate.properties}">
            <fileset dir="${source.root}">
               <include name="**/*.hbm.xml" />
            </fileset>
         </configuration>
         <hbm2java />
         <!-- <hbm2ddl /> -->
      </hibernatetool>
   </target>

   <target name="genschema">
      <!-- bit of a best guess, I'm afraid -->
      <hibernatetool destdir="${source.root}">
         <configuration propertyFile="src/${hibernate.properties}">
            <fileset dir="${source.root}">
               <include name="**/*.hbm.xml" />
            </fileset>
         </configuration>
         <!-- <hbm2java /> -->
         <hbm2ddl update="true"/>
      </hibernatetool>
   </target> 
</project>
