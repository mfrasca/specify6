/* This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
/* This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
package edu.ku.brc.specify.datamodel;

import java.sql.Timestamp;
import java.util.HashSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import edu.ku.brc.ui.db.PickListIFace;
import edu.ku.brc.ui.db.PickListItemIFace;

/**
 * PickListItem generated by hbm2java
 *
 * @code_status Beta
 * 
 * @author rods
 *
 */
@SuppressWarnings("serial")
@Entity(name="picklistitem")
public class PickListItem extends DataModelObjBase implements PickListItemIFace, java.io.Serializable
{
    // Fields
    protected Integer  pickListItemId;
    private String     title;
    private String     value;
    protected PickList pickList;
    
    // Non-Persisted Value as an Object
    private Object valueObject;

    // Constructors

    /** default constructor */
    public PickListItem()
    {
        // do nothing
    }

    public PickListItem(final String title, final String value, final Timestamp timestampCreated)
    {
        super();
        initialize();
        this.title = title;
        this.value = value;
    }

    public PickListItem(final String title, final Object valueObject, final Timestamp timestampCreated)
    {
        super();
        initialize();
        this.title       = title;
        this.valueObject = valueObject;
    }

    /* (non-Javadoc)
     * @see edu.ku.brc.specify.datamodel.DataModelObjBase#initialize()
     */
    @Override
    public void initialize()
    {
        super.init();
        pickListItemId = null;
        title          = null;
        value          = null;
        pickList       = null;
    }
    /**
     * @return
     */
    @Id
    @GeneratedValue
    @Column(name = "PickListItemID")
    protected Integer getPickListItemId()
    {
        return pickListItemId;
    }

    protected void setPickListItemId(Integer pickListItemId)
    {
        this.pickListItemId = pickListItemId;
    }

    /**
     * 
     */
    @Column(name = "Title", nullable = false, length = 64)
    public String getTitle()
    {
        return this.title;
    }

    public void setTitle(String title)
    {
        this.title = title;
    }

    @ManyToOne
    @Cascade( { CascadeType.SAVE_UPDATE, CascadeType.MERGE, CascadeType.LOCK })
    @JoinColumn(name = "PickListID", nullable = false)
    public PickList getPickList()
    {
        return pickList;
    }

    public void setPickList(PickList pickList)
    {
        this.pickList = pickList;
    }
    
    public void setPickList(PickListIFace pickList)
    {
    	setPickList((PickList)pickList);
    }

    /**
     * 
     */
    @Column(name = "Value", length = 64)
    public String getValue()
    {
        return this.value == null ? title : value;
    }

    public void setValue(String value)
    {
        this.value = value;
    }
    
    @Transient
    public Object getValueObject()
    {
        return valueObject == null ? value : valueObject;
    }

    public void setValueObject(Object valueObject)
    {
        this.valueObject = valueObject;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString()
    {
        return title;
    }

    /* (non-Javadoc)
     * @see edu.ku.brc.ui.db.PickListItemIFace#getId()
     */
    @Transient
    public Integer getId()
    {
        return pickListItemId;
    }
    /* (non-Javadoc)
     * @see edu.ku.brc.ui.forms.FormDataObjIFace#getTableId()
     */
    @Override
    @Transient
    public int getTableId()
    {
        return getClassTableId();
    }
    
    /**
     * @return the Table ID for the class.
     */
    @Transient
    public static int getClassTableId()
    {
        return 501;
    }
    
    /* (non-Javadoc)
     * @see edu.ku.brc.specify.datamodel.DataModelObjBase#getDataClass()
     */
    @Override
    @Transient
    public Class<?> getDataClass()
    {
        return PickListItem.class;
    }

    /* (non-Javadoc)
     * @see edu.ku.brc.specify.datamodel.DataModelObjBase#getIdentityTitle()
     */
    @Override
    @Transient
    public String getIdentityTitle()
    {
        return StringUtils.isNotEmpty(title) ? title : super.getIdentityTitle();
    }    
    //-------------------------------------
    // Comparable
    //-------------------------------------
    public int compareTo(PickListItemIFace obj)
    {
        if (title.equals(obj.getTitle()))
        {
            return 0;
        }
        // else
        return title.compareTo(obj.getTitle());
    }


}
