package se.nrm.specify.datamodel;

import java.io.Serializable;
import java.util.List;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author idali
 */
@XmlRootElement
public class SpecifyBeanWrapper implements Serializable {
    
//        @XmlElements({
//        @XmlElement(name = "accession", type = Accession.class),
//        @XmlElement(name = "accessionagent", type = Accessionagent.class),
//        @XmlElement(name = "accessionauthorization", type = Accessionauthorization.class),
//        @XmlElement(name = "address", type = Address.class),
//        @XmlElement(name = "agent", type = Agent.class), 
//        @XmlElement(name = "agentvariant", type = Agentvariant.class), 
//        @XmlElement(name = "appraisal", type = Appraisal.class), 
//        @XmlElement(name = "attachment", type = Attachment.class),
//        @XmlElement(name = "author", type = Author.class),
//        @XmlElement(name = "autonumberingscheme", type = Autonumberingscheme.class),
//        @XmlElement(name = "borrow", type = Borrow.class),
//        @XmlElement(name = "collectingevent", type = Collectingevent.class),
//        @XmlElement(name = "collectionobject", type = Collectionobject.class),
//        @XmlElement(name = "collection", type = Collection.class),
//        @XmlElement(name = "collector", type = Collector.class),
//        @XmlElement(name = "determination", type = Determination.class),
//        @XmlElement(name = "division", type = Division.class),
//        @XmlElement(name = "discipline", type = Discipline.class),
//        @XmlElement(name = "dnasequence", type = Dnasequence.class),
//        @XmlElement(name = "geography", type = Geography.class),
//        @XmlElement(name = "institution", type = Institution.class),
//        @XmlElement(name = "locality", type = Locality.class),
//        @XmlElement(name = "permit", type = Permit.class),
//        @XmlElement(name = "preparation", type = Preparation.class),
//        @XmlElement(name = "referencework", type = Referencework.class),
//        @XmlElement(name = "specifyuser", type = Specifyuser.class),
//        @XmlElement(name = "taxon", type = Taxon.class)
//    })
//    private SpecifyBean bean;
//    
//    @XmlElements({
//        @XmlElement(name = "accessions", type = Accession.class),
//        @XmlElement(name = "accessionagents", type = Accessionagent.class),
//        @XmlElement(name = "accessionauthorizations", type = Accessionauthorization.class),
//        @XmlElement(name = "addresses", type = Address.class),
//        @XmlElement(name = "agents", type = Agent.class),
//        @XmlElement(name = "agentvariants", type = Agentvariant.class), 
//        @XmlElement(name = "appraisals", type = Appraisal.class), 
//        @XmlElement(name = "attachments", type = Attachment.class),
//        @XmlElement(name = "authors", type = Author.class),
//        @XmlElement(name = "autonumberingschemes", type = Autonumberingscheme.class),
//        @XmlElement(name = "borrows", type = Borrow.class),
//        @XmlElement(name = "collectingevents", type = Collectingevent.class),
//        @XmlElement(name = "collectionobjects", type = Collectionobject.class),
//        @XmlElement(name = "collections", type = Collection.class),
//        @XmlElement(name = "collectors", type = Collector.class),
//        @XmlElement(name = "determinations", type = Determination.class),
//        @XmlElement(name = "disciplines", type = Discipline.class),
//        @XmlElement(name = "divisions", type = Division.class), 
//        @XmlElement(name = "dnasequences", type = Dnasequence.class),
//        @XmlElement(name = "geographies", type = Geography.class),
//        @XmlElement(name = "institutions", type = Institution.class),
//        @XmlElement(name = "localities", type = Locality.class),
//        @XmlElement(name = "permits", type = Permit.class),
//        @XmlElement(name = "preparations", type = Preparation.class),
//        @XmlElement(name = "referenceworks", type = Referencework.class),
//        @XmlElement(name = "specifyusers", type = Specifyuser.class),
//        @XmlElement(name = "taxons", type = Taxon.class)
//    })
//    private List<? extends SpecifyBean> beans;
//
//    public SpecifyBeanWrapper() {
//    }
//
//    public SpecifyBeanWrapper(SpecifyBean bean) {
//        this.bean = bean;
//    }
//
//    public SpecifyBeanWrapper(List<? extends SpecifyBean> beans) {
//        this.beans = beans;
//    }
//
//    public SpecifyBean getBean() {
//        return bean;
//    }
//
//    public List<? extends SpecifyBean> getBeans() {
//        return beans;
//    }
        
 
    @XmlElements({
        @XmlElement(name = "accession", type = Accession.class),
        @XmlElement(name = "accessionagent", type = Accessionagent.class),
        @XmlElement(name = "accessionattachment", type = Accessionattachment.class),
        @XmlElement(name = "accessionauthorization", type = Accessionauthorization.class),
        @XmlElement(name = "address", type = Address.class),
        @XmlElement(name = "addressofrecord", type = Addressofrecord.class),
        @XmlElement(name = "agent", type = Agent.class), 
        @XmlElement(name = "agentattachment", type = Agentattachment.class), 
        @XmlElement(name = "agentgeography", type = Agentgeography.class), 
        @XmlElement(name = "agentspecialty", type = Agentgeography.class),
        @XmlElement(name = "agentvariant", type = Agentvariant.class), 
        @XmlElement(name = "appraisal", type = Appraisal.class), 
        @XmlElement(name = "attachment", type = Attachment.class),
        @XmlElement(name = "attachmentimageattribute", type = Attachmentimageattribute.class), 
        @XmlElement(name = "attachmentmetadata", type = Attachmentmetadata.class), 
        @XmlElement(name = "attachmenttag", type = Attachmenttag.class), 
        @XmlElement(name = "attributedef", type = Attributedef.class), 
        @XmlElement(name = "author", type = Author.class),
        @XmlElement(name = "autonumberingscheme", type = Autonumberingscheme.class), 
        @XmlElement(name = "borrow", type = Borrow.class),
        @XmlElement(name = "borrowattachment", type = Borrowattachment.class),
        @XmlElement(name = "borrowmaterial", type = Borrowmaterial.class),
        @XmlElement(name = "borrowreturnmaterial", type = Borrowreturnmaterial.class), 
        @XmlElement(name = "collectingevent", type = Collectingevent.class), 
        @XmlElement(name = "collectingeventattachment", type = Collectingeventattachment.class),
        @XmlElement(name = "collectingeventattr", type = Collectingeventattr.class),
        @XmlElement(name = "collectingeventattribute", type = Collectingeventattribute.class),
        @XmlElement(name = "collectingtrip", type = Collectingtrip.class), 
        @XmlElement(name = "collection", type = Collection.class), 
        @XmlElement(name = "collectionobject", type = Collectionobject.class), 
        @XmlElement(name = "collectionobjectattachment", type = Collectionobjectattachment.class),
        @XmlElement(name = "collectionobjectattr", type = Collectionobjectattr.class), 
        @XmlElement(name = "collectionobjectattribute", type = Collectionobjectattribute.class), 
        @XmlElement(name = "collectionobjectcitation", type = Collectionobjectcitation.class),
        @XmlElement(name = "collectionrelationship", type = Collectionrelationship.class),
        @XmlElement(name = "collectionreltype", type = Collectionreltype.class),
        @XmlElement(name = "collector", type = Collector.class),  
        @XmlElement(name = "commonnametx", type = Commonnametx.class), 
        @XmlElement(name = "commonnametxcitation", type = Commonnametxcitation.class), 
        @XmlElement(name = "conservdescription", type = Conservdescription.class),
        @XmlElement(name = "conservdescriptionattachment", type = Conservdescriptionattachment.class), 
        @XmlElement(name = "conservevent", type = Conservevent.class), 
        @XmlElement(name = "conserveventattachment", type = Conserveventattachment.class), 
        @XmlElement(name = "container", type = Container.class),
        @XmlElement(name = "countryinfo", type = Countryinfo.class), 
        @XmlElement(name = "datatype", type = Datatype.class),
        @XmlElement(name = "deaccession", type = Deaccession.class),   
        @XmlElement(name = "deaccessionagent", type = Deaccessionagent.class),
        @XmlElement(name = "deaccessionpreparation", type = Deaccessionpreparation.class),
        @XmlElement(name = "determination", type = Determination.class),
        @XmlElement(name = "determinationcitation", type = Determinationcitation.class),  
        @XmlElement(name = "discipline", type = Discipline.class),
        @XmlElement(name = "division", type = Division.class),   
        @XmlElement(name = "dnasequence", type = Dnasequence.class),
        @XmlElement(name = "dnasequenceattachment", type = Dnasequenceattachment.class),
        @XmlElement(name = "dnasequencingrun", type = Dnasequencingrun.class),
        @XmlElement(name = "dnasequencerunattachment", type = Dnasequencerunattachment.class),          
        @XmlElement(name = "dnasequencingruncitation", type = Dnasequencingruncitation.class),     
        @XmlElement(name = "exchangein", type = Exchangein.class),   
        @XmlElement(name = "exchangeinprep", type = Exchangeinprep.class),
        @XmlElement(name = "exchangeout", type = Exchangeout.class),
        @XmlElement(name = "exchangeoutprep", type = Exchangeoutprep.class),
        @XmlElement(name = "exsiccata", type = Exsiccata.class),          
        @XmlElement(name = "exsiccataitem", type = Exsiccataitem.class),   
        @XmlElement(name = "fieldnotebook", type = Fieldnotebook.class),
        @XmlElement(name = "fieldnotebookattachment", type = Fieldnotebookattachment.class),   
        @XmlElement(name = "fieldnotebookpage", type = Fieldnotebookpage.class),
        @XmlElement(name = "fieldnotebookpageattachment", type = Fieldnotebookpageattachment.class),
        @XmlElement(name = "fieldnotebookpageset", type = Fieldnotebookpageset.class),
        @XmlElement(name = "fieldnotebookpagesetattachment", type = Fieldnotebookpagesetattachment.class),          
        @XmlElement(name = "fundingagent", type = Fundingagent.class),   
        @XmlElement(name = "geocoorddetail", type = Geocoorddetail.class),
        @XmlElement(name = "geography", type = Geography.class),   
        @XmlElement(name = "geographytreedef", type = Geographytreedef.class),
        @XmlElement(name = "geographytreedefitem", type = Geographytreedefitem.class),
        @XmlElement(name = "geologictimeperiod", type = Geologictimeperiod.class),
        @XmlElement(name = "geologictimeperiodtreedef", type = Geologictimeperiodtreedef.class),          
        @XmlElement(name = "geologictimeperiodtreedefitem", type = Geologictimeperiodtreedefitem.class),   
        @XmlElement(name = "geoname", type = Geoname.class),
        @XmlElement(name = "gift", type = Gift.class),   
        @XmlElement(name = "giftattachment", type = Giftattachment.class),
        @XmlElement(name = "giftagent", type = Giftagent.class),
        @XmlElement(name = "giftpreparation", type = Giftpreparation.class),
        @XmlElement(name = "groupperson", type = Groupperson.class),       
        @XmlElement(name = "inforequest", type = Inforequest.class),
        @XmlElement(name = "institution", type = Institution.class),
        @XmlElement(name = "institutionnetwork", type = Institutionnetwork.class),     
        @XmlElement(name = "journal", type = Journal.class), 
        @XmlElement(name = "latlonpolygon", type = Latlonpolygon.class),   
        @XmlElement(name = "latlonpolygonpnt", type = Latlonpolygonpnt.class),
        @XmlElement(name = "lithostrat", type = Lithostrat.class),   
        @XmlElement(name = "lithostrattreedef", type = Lithostrattreedef.class),
        @XmlElement(name = "lithostrattreedefitem", type = Lithostrattreedefitem.class), 
        @XmlElement(name = "loan", type = Loan.class),
        @XmlElement(name = "loanagent", type = Loanagent.class),          
        @XmlElement(name = "loanattachment", type = Loanattachment.class),   
        @XmlElement(name = "loanpreparation", type = Loanpreparation.class),
        @XmlElement(name = "loanreturnpreparation", type = Loanreturnpreparation.class),
        @XmlElement(name = "locality", type = Locality.class),   
        @XmlElement(name = "localityattachment", type = Localityattachment.class),
        @XmlElement(name = "localitycitation", type = Localitycitation.class),
        @XmlElement(name = "localitydetail", type = Localitydetail.class),
        @XmlElement(name = "localitynamealias", type = Localitynamealias.class),    
        @XmlElement(name = "morphbankview", type = Morphbankview.class),
        @XmlElement(name = "otheridentifier", type = Otheridentifier.class), 
        @XmlElement(name = "paleocontext", type = Paleocontext.class),   
        @XmlElement(name = "permit", type = Permit.class),
        @XmlElement(name = "permitattachment", type = Permitattachment.class),   
        @XmlElement(name = "picklist", type = Picklist.class),
        @XmlElement(name = "picklistitem", type = Picklistitem.class), 
        @XmlElement(name = "preparation", type = Preparation.class),
        @XmlElement(name = "preparationattachment", type = Preparationattachment.class),          
        @XmlElement(name = "preparationattr", type = Preparationattr.class),   
        @XmlElement(name = "preparationattribute", type = Preparationattribute.class),
        @XmlElement(name = "preptype", type = Preptype.class),
        @XmlElement(name = "project", type = Project.class),    
        @XmlElement(name = "recordset", type = Recordset.class),
        @XmlElement(name = "recordsetitem", type = Recordsetitem.class),          
        @XmlElement(name = "referencework", type = Referencework.class),   
        @XmlElement(name = "referenceworkattachment", type = Referenceworkattachment.class),
        @XmlElement(name = "repositoryagreement", type = Repositoryagreement.class),
        @XmlElement(name = "repositoryagreementattachment", type = Repositoryagreementattachment.class),  
        @XmlElement(name = "sgrbatchmatchresultitem", type = Sgrbatchmatchresultitem.class), 
        @XmlElement(name = "sgrbatchmatchresultset", type = Sgrbatchmatchresultset.class),
        @XmlElement(name = "sgrmatchconfiguration", type = Sgrmatchconfiguration.class),   
        @XmlElement(name = "shipment", type = Shipment.class),   
        @XmlElement(name = "spappresource", type = Spappresource.class),
        @XmlElement(name = "spappresourcedata", type = Spappresourcedata.class),
        @XmlElement(name = "spappresourcedir", type = Spappresourcedir.class),   
        @XmlElement(name = "spauditlog", type = Spauditlog.class),
        @XmlElement(name = "spauditlogfield", type = Spauditlogfield.class), 
        @XmlElement(name = "specifyuser", type = Specifyuser.class),
        @XmlElement(name = "spexportschema", type = Spexportschema.class),    
        @XmlElement(name = "spexportschemaitem", type = Spexportschemaitem.class),
        @XmlElement(name = "spexportschemaitemmapping", type = Spexportschemaitemmapping.class), 
        @XmlElement(name = "spexportschemamapping", type = Spexportschemamapping.class), 
        @XmlElement(name = "spfieldvaluedefault", type = Spfieldvaluedefault.class),
        @XmlElement(name = "splocalecontainer", type = Splocalecontainer.class),   
        @XmlElement(name = "splocalecontaineritem", type = Splocalecontaineritem.class),
        @XmlElement(name = "splocaleitemstr", type = Splocaleitemstr.class), 
        @XmlElement(name = "sppermission", type = Sppermission.class),
        @XmlElement(name = "spprincipal", type = Spprincipal.class),          
        @XmlElement(name = "spquery", type = Spquery.class),   
        @XmlElement(name = "spqueryfield", type = Spqueryfield.class), 
        @XmlElement(name = "spreport", type = Spreport.class),
        @XmlElement(name = "sptasksemaphore", type = Sptasksemaphore.class),    
        @XmlElement(name = "spversion", type = Spversion.class),
        @XmlElement(name = "spviewsetobj", type = Spviewsetobj.class),          
        @XmlElement(name = "spvisualquery", type = Spvisualquery.class),   
        @XmlElement(name = "storage", type = Storage.class),
        @XmlElement(name = "storagetreedef", type = Storagetreedef.class),
        @XmlElement(name = "storagetreedefitem", type = Storagetreedefitem.class), 
        @XmlElement(name = "taxon", type = Taxon.class),
        @XmlElement(name = "taxonattachment", type = Taxonattachment.class),          
        @XmlElement(name = "taxoncitation", type = Taxoncitation.class),   
        @XmlElement(name = "taxontreedef", type = Taxontreedef.class),
        @XmlElement(name = "taxontreedefitem", type = Taxontreedefitem.class),
        @XmlElement(name = "treatmentevent", type = Treatmentevent.class),  
        @XmlElement(name = "Workbench", type = Workbench.class),
        @XmlElement(name = "Workbenchdataitem", type = Workbenchdataitem.class),          
        @XmlElement(name = "Workbenchrow", type = Workbenchrow.class),   
        @XmlElement(name = "Workbenchrowexportedrelationship", type = Workbenchrowexportedrelationship.class),
        @XmlElement(name = "Workbenchrowimage", type = Workbenchrowimage.class),
        @XmlElement(name = "Workbenchtemplate", type = Workbenchtemplate.class), 
        @XmlElement(name = "Workbenchtemplatemappingitem", type = Workbenchtemplatemappingitem.class) 
    })
    private SpecifyBean bean;
    
    @XmlElements({
        @XmlElement(name = "accessions", type = Accession.class),
        @XmlElement(name = "accessionagents", type = Accessionagent.class),
        @XmlElement(name = "accessionattachments", type = Accessionattachment.class),
        @XmlElement(name = "accessionauthorizations", type = Accessionauthorization.class),
        @XmlElement(name = "addresses", type = Address.class),
        @XmlElement(name = "addressofrecords", type = Addressofrecord.class),
        @XmlElement(name = "agents", type = Agent.class),
        @XmlElement(name = "agentattachments", type = Agentattachment.class), 
        @XmlElement(name = "agentgeographies", type = Agentgeography.class),
        @XmlElement(name = "agentspecialties", type = Agentgeography.class),
        @XmlElement(name = "agentvariants", type = Agentvariant.class), 
        @XmlElement(name = "appraisals", type = Appraisal.class), 
        @XmlElement(name = "attachments", type = Attachment.class),
        @XmlElement(name = "attachmentimageattributes", type = Attachmentimageattribute.class), 
        @XmlElement(name = "attachmentmetadatas", type = Attachmentmetadata.class), 
        @XmlElement(name = "attachmenttags", type = Attachmenttag.class), 
        @XmlElement(name = "attributedefs", type = Attributedef.class), 
        @XmlElement(name = "authors", type = Author.class),
        @XmlElement(name = "autonumberingschemes", type = Autonumberingscheme.class), 
        @XmlElement(name = "borrows", type = Borrow.class),
        @XmlElement(name = "borrowattachments", type = Borrowattachment.class),
        @XmlElement(name = "borrowmaterials", type = Borrowmaterial.class),
        @XmlElement(name = "borrowreturnmaterials", type = Borrowreturnmaterial.class), 
        @XmlElement(name = "collectingevents", type = Collectingevent.class), 
        @XmlElement(name = "collectingeventattachments", type = Collectingeventattachment.class),
        @XmlElement(name = "collectingeventattrs", type = Collectingeventattr.class),
        @XmlElement(name = "collectingeventattributes", type = Collectingeventattribute.class),
        @XmlElement(name = "collectingtrips", type = Collectingtrip.class), 
        @XmlElement(name = "collections", type = Collection.class), 
        @XmlElement(name = "collectionobjects", type = Collectionobject.class), 
        @XmlElement(name = "collectionobjectattachments", type = Collectionobjectattachment.class),
        @XmlElement(name = "collectionobjectattrs", type = Collectionobjectattr.class), 
        @XmlElement(name = "collectionobjectattributes", type = Collectionobjectattribute.class), 
        @XmlElement(name = "collectionobjectcitations", type = Collectionobjectcitation.class),
        @XmlElement(name = "collectionrelationships", type = Collectionrelationship.class),
        @XmlElement(name = "collectionreltypes", type = Collectionreltype.class),
        @XmlElement(name = "collectors", type = Collector.class),  
        @XmlElement(name = "commonnametxs", type = Commonnametx.class), 
        @XmlElement(name = "commonnametxcitations", type = Commonnametxcitation.class), 
        @XmlElement(name = "conservdescriptions", type = Conservdescription.class),
        @XmlElement(name = "conservdescriptionattachments", type = Conservdescriptionattachment.class), 
        @XmlElement(name = "conservevents", type = Conservevent.class), 
        @XmlElement(name = "conserveventattachments", type = Conserveventattachment.class), 
        @XmlElement(name = "containers", type = Container.class),
        @XmlElement(name = "countryinfos", type = Countryinfo.class), 
        @XmlElement(name = "datatypes", type = Datatype.class),
        @XmlElement(name = "deaccessions", type = Deaccession.class),   
        @XmlElement(name = "deaccessionagents", type = Deaccessionagent.class),
        @XmlElement(name = "deaccessionpreparations", type = Deaccessionpreparation.class),
        @XmlElement(name = "determinations", type = Determination.class),
        @XmlElement(name = "determinationcitations", type = Determinationcitation.class),  
        @XmlElement(name = "disciplines", type = Discipline.class),
        @XmlElement(name = "divisions", type = Division.class),   
        @XmlElement(name = "dnasequences", type = Dnasequence.class),
        @XmlElement(name = "dnasequenceattachments", type = Dnasequenceattachment.class),
        @XmlElement(name = "dnasequencingruns", type = Dnasequencingrun.class),
        @XmlElement(name = "dnasequencerunattachments", type = Dnasequencerunattachment.class),          
        @XmlElement(name = "dnasequencingruncitations", type = Dnasequencingruncitation.class),    
        @XmlElement(name = "exchangeins", type = Exchangein.class),   
        @XmlElement(name = "exchangeinpreps", type = Exchangeinprep.class),
        @XmlElement(name = "exchangeouts", type = Exchangeout.class),
        @XmlElement(name = "exchangeoutpreps", type = Exchangeoutprep.class),
        @XmlElement(name = "exsiccatas", type = Exsiccata.class),          
        @XmlElement(name = "exsiccataitems", type = Exsiccataitem.class),   
        @XmlElement(name = "fieldnotebooks", type = Fieldnotebook.class),
        @XmlElement(name = "fieldnotebookattachments", type = Fieldnotebookattachment.class),   
        @XmlElement(name = "fieldnotebookpages", type = Fieldnotebookpage.class),
        @XmlElement(name = "fieldnotebookpageattachments", type = Fieldnotebookpageattachment.class),
        @XmlElement(name = "fieldnotebookpagesets", type = Fieldnotebookpageset.class),
        @XmlElement(name = "fieldnotebookpagesetattachments", type = Fieldnotebookpagesetattachment.class),          
        @XmlElement(name = "fundingagents", type = Fundingagent.class),   
        @XmlElement(name = "geocoorddetails", type = Geocoorddetail.class),
        @XmlElement(name = "geographies", type = Geography.class),   
        @XmlElement(name = "geographytreedefs", type = Geographytreedef.class),
        @XmlElement(name = "geographytreedefitems", type = Geographytreedefitem.class),
        @XmlElement(name = "geologictimeperiods", type = Geologictimeperiod.class),
        @XmlElement(name = "geologictimeperiodtreedefs", type = Geologictimeperiodtreedef.class),          
        @XmlElement(name = "geologictimeperiodtreedefitems", type = Geologictimeperiodtreedefitem.class),   
        @XmlElement(name = "geonames", type = Geoname.class),
        @XmlElement(name = "gifts", type = Gift.class),   
        @XmlElement(name = "giftattachments", type = Giftattachment.class),
        @XmlElement(name = "giftagents", type = Giftagent.class),
        @XmlElement(name = "giftpreparations", type = Giftpreparation.class),
        @XmlElement(name = "grouppersons", type = Groupperson.class),   
        @XmlElement(name = "inforequests", type = Inforequest.class),
        @XmlElement(name = "institutions", type = Institution.class),
        @XmlElement(name = "institutionnetworks", type = Institutionnetwork.class),    
        @XmlElement(name = "journals", type = Journal.class),
        @XmlElement(name = "latlonpolygons", type = Latlonpolygon.class),   
        @XmlElement(name = "latlonpolygonpnts", type = Latlonpolygonpnt.class),
        @XmlElement(name = "lithostrats", type = Lithostrat.class),   
        @XmlElement(name = "lithostrattreedefs", type = Lithostrattreedef.class),
        @XmlElement(name = "lithostrattreedefitems", type = Lithostrattreedefitem.class), 
        @XmlElement(name = "loans", type = Loan.class),
        @XmlElement(name = "loanagents", type = Loanagent.class),          
        @XmlElement(name = "loanattachments", type = Loanattachment.class),   
        @XmlElement(name = "loanpreparations", type = Loanpreparation.class),
        @XmlElement(name = "loanreturnpreparations", type = Loanreturnpreparation.class),
        @XmlElement(name = "localitys", type = Locality.class),   
        @XmlElement(name = "localityattachments", type = Localityattachment.class),
        @XmlElement(name = "localitycitations", type = Localitycitation.class),
        @XmlElement(name = "localitydetails", type = Localitydetail.class),
        @XmlElement(name = "localitynamealias", type = Localitynamealias.class),    
        @XmlElement(name = "morphbankview", type = Morphbankview.class),
        @XmlElement(name = "otheridentifier", type = Otheridentifier.class),   
        @XmlElement(name = "paleocontexts", type = Paleocontext.class),   
        @XmlElement(name = "permits", type = Permit.class),
        @XmlElement(name = "permitattachments", type = Permitattachment.class),   
        @XmlElement(name = "picklists", type = Picklist.class),
        @XmlElement(name = "picklistitems", type = Picklistitem.class), 
        @XmlElement(name = "preparations", type = Preparation.class),
        @XmlElement(name = "preparationattachments", type = Preparationattachment.class),          
        @XmlElement(name = "preparationattrs", type = Preparationattr.class),   
        @XmlElement(name = "preparationattributes", type = Preparationattribute.class),
        @XmlElement(name = "preptypes", type = Preptype.class),
        @XmlElement(name = "projects", type = Project.class),  
        @XmlElement(name = "recordsets", type = Recordset.class),
        @XmlElement(name = "recordsetitems", type = Recordsetitem.class),          
        @XmlElement(name = "referenceworks", type = Referencework.class),   
        @XmlElement(name = "referenceworkattachments", type = Referenceworkattachment.class),
        @XmlElement(name = "repositoryagreements", type = Repositoryagreement.class),
        @XmlElement(name = "repositoryagreementattachments", type = Repositoryagreementattachment.class),   
        @XmlElement(name = "sgrbatchmatchresultitems", type = Sgrbatchmatchresultitem.class), 
        @XmlElement(name = "sgrbatchmatchresultsets", type = Sgrbatchmatchresultset.class),
        @XmlElement(name = "sgrmatchconfigurations", type = Sgrmatchconfiguration.class),   
        @XmlElement(name = "shipments", type = Shipment.class),   
        @XmlElement(name = "spappresources", type = Spappresource.class),
        @XmlElement(name = "spappresourcedatas", type = Spappresourcedata.class),
        @XmlElement(name = "spappresourcedirs", type = Spappresourcedir.class),   
        @XmlElement(name = "spauditlogs", type = Spauditlog.class),
        @XmlElement(name = "spauditlogfields", type = Spauditlogfield.class), 
        @XmlElement(name = "specifyusers", type = Specifyuser.class),
        @XmlElement(name = "spexportschemas", type = Spexportschema.class),    
        @XmlElement(name = "spexportschemaitems", type = Spexportschemaitem.class),
        @XmlElement(name = "spexportschemaitemmappings", type = Spexportschemaitemmapping.class), 
        @XmlElement(name = "spexportschemamappings", type = Spexportschemamapping.class), 
        @XmlElement(name = "spfieldvaluedefaults", type = Spfieldvaluedefault.class),
        @XmlElement(name = "splocalecontainers", type = Splocalecontainer.class),   
        @XmlElement(name = "splocalecontaineritems", type = Splocalecontaineritem.class),
        @XmlElement(name = "splocaleitemstrs", type = Splocaleitemstr.class), 
        @XmlElement(name = "sppermissions", type = Sppermission.class),
        @XmlElement(name = "spprincipals", type = Spprincipal.class),          
        @XmlElement(name = "spquerys", type = Spquery.class),   
        @XmlElement(name = "spqueryfields", type = Spqueryfield.class), 
        @XmlElement(name = "spreports", type = Spreport.class),
        @XmlElement(name = "sptasksemaphores", type = Sptasksemaphore.class),    
        @XmlElement(name = "spversions", type = Spversion.class),
        @XmlElement(name = "spviewsetobjs", type = Spviewsetobj.class),          
        @XmlElement(name = "spvisualquerys", type = Spvisualquery.class),   
        @XmlElement(name = "storages", type = Storage.class),
        @XmlElement(name = "storagetreedefs", type = Storagetreedef.class),
        @XmlElement(name = "storagetreedefitems", type = Storagetreedefitem.class),  
        @XmlElement(name = "taxons", type = Taxon.class),
        @XmlElement(name = "taxonattachments", type = Taxonattachment.class),          
        @XmlElement(name = "taxoncitations", type = Taxoncitation.class),   
        @XmlElement(name = "taxontreedefs", type = Taxontreedef.class),
        @XmlElement(name = "taxontreedefitems", type = Taxontreedefitem.class),
        @XmlElement(name = "treatmentevents", type = Treatmentevent.class),  
        @XmlElement(name = "Workbenchs", type = Workbench.class),
        @XmlElement(name = "Workbenchdataitems", type = Workbenchdataitem.class),          
        @XmlElement(name = "Workbenchrows", type = Workbenchrow.class),   
        @XmlElement(name = "Workbenchrowexportedrelationships", type = Workbenchrowexportedrelationship.class),
        @XmlElement(name = "Workbenchrowimages", type = Workbenchrowimage.class),
        @XmlElement(name = "Workbenchtemplates", type = Workbenchtemplate.class), 
        @XmlElement(name = "Workbenchtemplatemappingitems", type = Workbenchtemplatemappingitem.class) 
    })
    private List<? extends SpecifyBean> beans;

    public SpecifyBeanWrapper() {
    }

    public SpecifyBeanWrapper(SpecifyBean bean) {
        this.bean = bean;
    }

    public SpecifyBeanWrapper(List<? extends SpecifyBean> beans) {
        this.beans = beans;
    }

    public SpecifyBean getBean() {
        return bean;
    }

    public List<? extends SpecifyBean> getBeans() {
        return beans;
    }
}
